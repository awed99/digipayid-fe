{"version":3,"file":"static/chunks/2834-19967d075c7ea12f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/Grid/GridContext.js","webpack://_N_E/./node_modules/@mui/material/Grid/gridClasses.js","webpack://_N_E/./node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;"],"names":["GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","SPACINGS","map","spacing","concat","DIRECTIONS","direction","WRAPS","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","param","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","resolveSpacingStyles","Number","isNaN","breakpoint","value","push","breakpointsStyles","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","maxWidth","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","resolveSpacingClasses","className","breakpointsClasses","slots","composeClasses","Grid_Grid","inProps","ref","themeProps","useDefaultProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","breakpointsValues","otherFiltered","_jsx","Provider","children","clsx","as"],"sourceRoot":""}