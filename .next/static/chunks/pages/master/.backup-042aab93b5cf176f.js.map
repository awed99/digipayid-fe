{"version":3,"file":"static/chunks/pages/master/.backup-042aab93b5cf176f.js","mappings":"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","sources":["webpack://_N_E/?0160","webpack://_N_E/./node_modules/@mui/material/Card/cardClasses.js","webpack://_N_E/./node_modules/@mui/material/Card/Card.js","webpack://_N_E/./src/components/no-rows-table.js","webpack://_N_E/./src/pages/master/.backup.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/master/.backup\",\n      function () {\n        return require(\"private-next-pages/master/.backup.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/master/.backup\"])\n      });\n    }\n  ","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\n\nconst StyledGridOverlay = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n  '& .ant-empty-img-1': {\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626'\n  },\n  '& .ant-empty-img-2': {\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959'\n  },\n  '& .ant-empty-img-3': {\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343'\n  },\n  '& .ant-empty-img-4': {\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c'\n  },\n  '& .ant-empty-img-5': {\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff'\n  }\n}))\n\nexport default function CustomNoRowsOverlay() {\n  return (\n    <StyledGridOverlay>\n      <svg style={{ flexShrink: 0 }} width='240' height='200' viewBox='0 0 184 152' aria-hidden focusable='false'>\n        <g fill='none' fillRule='evenodd'>\n          <g transform='translate(24 31.67)'>\n            <ellipse className='ant-empty-img-5' cx='67.797' cy='106.89' rx='67.797' ry='12.668' />\n            <path\n              className='ant-empty-img-1'\n              d='M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z'\n            />\n            <path\n              className='ant-empty-img-2'\n              d='M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z'\n            />\n            <path\n              className='ant-empty-img-3'\n              d='M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z'\n            />\n          </g>\n          <path\n            className='ant-empty-img-3'\n            d='M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z'\n          />\n          <g className='ant-empty-img-4' transform='translate(149.65 15.383)'>\n            <ellipse cx='20.654' cy='3.167' rx='2.849' ry='2.815' />\n            <path d='M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z' />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>No Rows</Box>\n    </StyledGridOverlay>\n  )\n}\n","// ** MUI Imports\nimport Card from '@mui/material/Card'\nimport Chip from '@mui/material/Chip'\nimport Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Typography from '@mui/material/Typography'\n\n// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Demo Components Imports\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport CustomNoRowsOverlay from '/src/components/no-rows-table'\n\nconst MUITable = () => {\n  // ** States\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  const columns = [\n    { field: 'no', headerName: '#', width: 50 },\n    { field: 'username', headerName: 'User', width: 350 },\n    {\n      field: 'status',\n      headerName: 'Status',\n      width: 'auto',\n      renderCell: params => <Chip label={'Aktif'} color='primary' />\n    }\n\n    // {\n    //   field: 'proses',\n    //   headerName: 'Proses',\n    //   minWidth: 30,\n    //   width: 100,\n    //   align: 'left',\n    //   renderCell: params => <Chip label={params?.value} color='primary' />\n\n    //   // format: value => value.toFixed(2)\n    // },\n  ]\n\n  const createData = (id, no, product_category) => {\n    return { id, no, product_category }\n  }\n\n  const rows0 = [createData(1, 1, 'Utama'), createData(2, 2, 'Tambahan')]\n  const rows = []\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12}>\n        <Typography variant='h5'>\n          <Link>User</Link>\n        </Typography>\n        <Typography variant='body2'>Semua User yang tersedia</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Card>\n          <Box sx={{ width: '100%', overflow: 'auto' }}>\n            <DataGrid\n              autoHeight\n              rows={rows}\n              columns={columns}\n              slots={{ toolbar: GridToolbar, noRowsOverlay: CustomNoRowsOverlay }}\n              slotProps={{\n                toolbar: {\n                  showQuickFilter: true\n                }\n              }}\n              sx={{ pt: 2, minHeight: '350px', '--DataGrid-overlayHeight': '300px' }}\n              disableRowSelectionOnClick\n            />\n          </Box>\n        </Card>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default MUITable\n"],"names":["window","__NEXT_P","push","__webpack_require__","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","composeClasses","root","CardRoot","styled","Paper","name","overridesResolver","props","styles","overflow","Card_Card","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","_extends","_jsx","clsx","elevation","undefined","StyledGridOverlay","theme","param","display","flexDirection","alignItems","justifyContent","height","fill","palette","mode","fillOpacity","CustomNoRowsOverlay","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","jsx","svg","style","flexShrink","width","viewBox","aria-hidden","focusable","g","fillRule","transform","ellipse","cx","cy","rx","ry","path","d","Box","sx","mt","__webpack_exports__","page","setPage","useState","rowsPerPage","setRowsPerPage","createData","id","no","product_category","Grid","container","spacing","item","xs","Typography","variant","Link","Card","DataGrid","autoHeight","rows","columns","field","headerName","renderCell","params","Chip","label","color","slots","toolbar","GridToolbar","noRowsOverlay","slotProps","showQuickFilter","pt","minHeight","disableRowSelectionOnClick"],"sourceRoot":""}