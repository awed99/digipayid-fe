{"version":3,"file":"../pages/_error.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,qBAA4B;;;;;;;;;ACGlC,MAAMA,oBAAoB,GAAGC,KAAK,IAAI;AACpC,sBAAOC,oBAAAA,CAAC,iBAAD;AAAO,cAAU,EAAED,KAAK,CAACE,UAAAA;AAAzB,GAAP;AACD,CAFD;;AAIAH,oBAAoB,CAACI,eAArB,GAAuC,MAAMC,WAAN,IAAqB;AAC1D;AACA;AACA,QAAMC,uCAAA,CAAuCD,WAAvC,CAAN,CAH0D;;AAM1D,SAAOG,+BAAA,CAAsBH,WAAtB,CAAP;AACD,CAPD;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,GAAG,qBAAqB,EAAE;AAC9C;AACA,MAAM,aAAa,GAAG,cAAc,GAAG,cAAc,CAAC,OAAO,GAAG,SAAS,CAAC;AAC1E;AACA,MAAM,mBAAmB,GAAG,aAAa,GAAG,aAAa,CAAC,eAAe,GAAG,SAAS,CAAC;AACtF,MAAM,kBAAkB,GAAG,cAAc,GAAG,cAAc,CAAC,cAAc,GAAG,SAAS,CAAC;AACtF,MAAM,sBAAsB,GAAG,cAAc,GAAG,cAAc,CAAC,kBAAkB,GAAG,SAAS,CAAC;AAC9F;AACA;AACA,MAAM,uBAAuB,GAAG;AAChC,EAAE,OAAO,EAAE,wCAAuC;AAClD,EAAE,YAAY,EAAE,6CAA4C;AAC5D,EAAE,SAAS,EAAE,0CAAyC;AACtD,CAAC,CAAC;AACF;AACA,MAAM,sBAAsB,GAAG,uBAAuB,CAAC,SAAS,CAAC,IAAI,qCAAoC,CAAC;AAC1G;AACA,IAAI,aAAa,IAAI,OAAO,mBAAmB,KAAK,UAAU,EAAE;AAChE,EAAE,aAAa,CAAC,eAAe,GAAG,sBAAsB,CAAC,mBAAmB,CAAC,EAAE;AAC/E,CAAC;AACD;AACK,MAAC,cAAc;AACpB,EAAE,OAAO,kBAAkB,KAAK,UAAU;AAC1C,MAAM,oCAAmC,CAAC,kBAAkB,EAAE,SAAS,CAAC;AACxE,MAAM,UAAU;AACX,MAAC,kBAAkB;AACxB,EAAE,OAAO,sBAAsB,KAAK,UAAU;AAC9C,MAAM,wCAAuC,CAAC,sBAAsB,EAAE,SAAS,CAAC;AAChF,MAAM,UAAU;AAChB;AACK,MAAC,mBAAmB,GAAG,aAAa,GAAG,mCAAkC,CAAC,aAAa,EAAE,GAAG;;;;;;;;;;AC3CjG;;;;;;;ACAA","sources":["webpack://DIGIPAYID/external \"next/error\"","webpack://DIGIPAYID/src/pages/_error.jsx","webpack://DIGIPAYID/sentry-wrapper-module","webpack://DIGIPAYID/external \"@sentry/nextjs\"","webpack://DIGIPAYID/external \"react/jsx-runtime\""],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = require(\"next/error\");","import * as Sentry from '@sentry/nextjs'\nimport Error from 'next/error'\n\nconst CustomErrorComponent = props => {\n  return <Error statusCode={props.statusCode} />\n}\n\nCustomErrorComponent.getInitialProps = async contextData => {\n  // In case this is running in a serverless function, await this in order to give Sentry\n  // time to send the error before the lambda exits\n  await Sentry.captureUnderscoreErrorException(contextData)\n\n  // This will contain the status code of the response\n  return Error.getInitialProps(contextData)\n}\n\nexport default CustomErrorComponent\n","import * as Sentry from '@sentry/nextjs';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\n/*\n * This file is a template for the code which will be substituted when our webpack loader handles non-API files in the\n * `pages/` directory.\n *\n * We use `__SENTRY_WRAPPING_TARGET_FILE__.cjs` as a placeholder for the path to the file being wrapped. Because it's not a real package,\n * this causes both TS and ESLint to complain, hence the pragma comments below.\n */\n\n\nconst userPageModule = serverComponentModule ;\n\nconst pageComponent = userPageModule ? userPageModule.default : undefined;\n\nconst origGetInitialProps = pageComponent ? pageComponent.getInitialProps : undefined;\nconst origGetStaticProps = userPageModule ? userPageModule.getStaticProps : undefined;\nconst origGetServerSideProps = userPageModule ? userPageModule.getServerSideProps : undefined;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getInitialPropsWrappers = {\n  '/_app': Sentry.wrapAppGetInitialPropsWithSentry,\n  '/_document': Sentry.wrapDocumentGetInitialPropsWithSentry,\n  '/_error': Sentry.wrapErrorGetInitialPropsWithSentry,\n};\n\nconst getInitialPropsWrapper = getInitialPropsWrappers['/_error'] || Sentry.wrapGetInitialPropsWithSentry;\n\nif (pageComponent && typeof origGetInitialProps === 'function') {\n  pageComponent.getInitialProps = getInitialPropsWrapper(origGetInitialProps) ;\n}\n\nconst getStaticProps =\n  typeof origGetStaticProps === 'function'\n    ? Sentry.wrapGetStaticPropsWithSentry(origGetStaticProps, '/_error')\n    : undefined;\nconst getServerSideProps =\n  typeof origGetServerSideProps === 'function'\n    ? Sentry.wrapGetServerSidePropsWithSentry(origGetServerSideProps, '/_error')\n    : undefined;\n\nconst pageWrapperTemplate = pageComponent ? Sentry.wrapPageComponentWithSentry(pageComponent ) : pageComponent;\n\nexport { pageWrapperTemplate as default, getServerSideProps, getStaticProps };\n","module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"react/jsx-runtime\");"],"names":["CustomErrorComponent","props","_jsx","statusCode","getInitialProps","contextData","Sentry","captureUnderscoreErrorException","Error"],"sourceRoot":""}