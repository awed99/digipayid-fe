var {
  _nullishCoalesce,
  _optionalChain
} = require('@sentry/utils');

Object.defineProperty(exports, '__esModule', { value: true });

const utils = require('@sentry/utils');

/**
 * Function that delays closing of a Vercel lambda until the provided promise is resolved.
 *
 * Vendored from https://www.npmjs.com/package/@vercel/functions
 */
function vercelWaitUntil(task) {
  const vercelRequestContextGlobal =
    // @ts-expect-error This is not typed
    utils.GLOBAL_OBJ[Symbol.for('@vercel/request-context')];

  const ctx = _nullishCoalesce(_optionalChain([vercelRequestContextGlobal, 'optionalAccess', _ => _.get, 'optionalCall', _2 => _2()]), () => ( {}));
  _optionalChain([ctx, 'access', _3 => _3.waitUntil, 'optionalCall', _4 => _4(task)]);
}

exports.vercelWaitUntil = vercelWaitUntil;
//# sourceMappingURL=vercelWaitUntil.js.map
